#include "opencv2/imgcodecs.hpp"
#include "opencv2/highgui.hpp"
#include "opencv2/stitching.hpp"
#include <iostream>
using namespace std;
using namespace cv;
bool try_use_gpu = false;
bool divide_images = false;
Stitcher::Mode mode = Stitcher::SCANS;
vector<Mat> imgs;
int main()
{
	int argc = 4;
	String images[4] = { "C:\\pictures\\img1.jpg", "C:\\pictures\\img2.jpg", "C:\\pictures\\img3.jpg", "C:\\pictures\\img4.jpg" };

	for (int i = 0; i < argc; i++)
	{
		Mat img = imread(images[i]);
		if (img.empty())
		{
			cout << "We have a problem \n";
		}
		else
		{
			imgs.push_back(img);
		}

	}
	Mat pano, smallpano;
	Ptr<Stitcher> stitcher = Stitcher::create(mode, try_use_gpu);
	Stitcher::Status status = stitcher->stitch(imgs, pano);
	if (status != Stitcher::OK)
	{
		cout << "Can't stitch images, error code = " << int(status) << endl;
		waitKey(0);
		return -1;
	}
	resize(pano, smallpano, Size(), 0.2, 0.2);
	imshow("Result", smallpano);
	cout << "stitching completed successfully\n";
	waitKey(0);
	return 0;
}
